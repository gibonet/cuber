% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/split_apply_.R
\name{cube_vars_}
\alias{cube_vars_}
\title{Create a (partial) data cube and store it in a list}
\usage{
cube_vars_(
  .data,
  .list_vars,
  sep = ".",
  fun_list = list(n = ~nrow(.data)),
  .all = FALSE,
  ...
)
}
\arguments{
\item{.data}{a data frame.}

\item{.list_vars}{a list of character vectors with the combinations of 
variables for which functions will be evaluated.}

\item{sep}{a character string to separate the terms.}

\item{fun_list}{a named list of formulas with the desired function calls
 to be evalutated on the data frame. The default value (\code{list(n = ~nrow(.data))})
returns the number of rows (observations) and stores it in a column named \code{n}.}

\item{.all}{logical, indicating if functions' evaluations on the complete 
dataset have to be done.}

\item{...}{additional optional arguments passed to \code{\link{res2df}} 
(\code{estimator_name} and \code{value}).}
}
\description{
Create a (partial) data cube and store it in a list
}
\examples{
data(invented_wages)
str(invented_wages)

# Create a list of character vectors with the combinations of variables
# for which we want to evalutate function calls
list_all_vars <- unlist(combn_char(c("gender", "sector")), recursive = FALSE)
list_all_vars           # All the combinations of the two variables        
list_all_vars[c(1, 3)]  # Keep only the first and the third

# Then create a list of function calls (with formulas)
fun <- list(m1 = ~weighted.mean(wage, sample_weights), s = ~sum(sample_weights))

# And finally create the data cube, but only on the given combinations of
# variables
cube_vars_(invented_wages, .list_vars = list_all_vars[c(2, 3)], fun_list = fun)

# Setting .all = TRUE adds the evalutations on the complete dataset
cube_vars_(invented_wages, .list_vars = list_all_vars[c(2, 3)], fun_list = fun, .all = TRUE)

}
