% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/split_apply_.R
\name{split_apply_}
\alias{split_apply_}
\title{Apply a list of function calls to groups of a data frame}
\usage{
split_apply_(.data, .vars, sep = ".", fun_list = list(n = ~nrow(.data)))
}
\arguments{
\item{.data}{a data frame.}

\item{.vars}{character vector with the names of the columns for which the 
data frame will be divided.}

\item{sep}{a character string to separate the terms.}

\item{fun_list}{a named list of formulas with the desired function calls to
be evalutated on the data frame. The default value (\code{list(n = ~nrow(.data))})
returns the number of rows (observations) and stores it in a column named \code{n}.}
}
\value{
a nested list
}
\description{
Apply a list of function calls to groups of a data frame
}
\examples{
data(invented_wages)
str(invented_wages)

# First create a list of function calls (with formulas)
fun <- list(m1 = ~weighted.mean(wage, sample_weights), s = ~sum(sample_weights))

# And then apply them to subsets of data defined by the combinations of variables
split_apply_(invented_wages, .vars = "gender", fun_list = fun)
split_apply_(invented_wages, .vars = c("gender", "sector"), fun_list = fun)
split_apply_(invented_wages, .vars = c("gender", "sector", "education"), fun_list = fun)
}
